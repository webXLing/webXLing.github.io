(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{147:function(s,a,n){"use strict";n.r(a);var t=n(0),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h4",{attrs:{id:"js运算-精度问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js运算-精度问题"}},[s._v("#")]),s._v(" js运算 精度问题")]),s._v(" "),n("h5",{attrs:{id:"除法函数，用来得到精确的除法结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#除法函数，用来得到精确的除法结果"}},[s._v("#")]),s._v(" 除法函数，用来得到精确的除法结果")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('  //说明：javascript的除法结果会有误差，在两个浮点数相除的时候会比较明显。这个函数返回较为精确的除法结果。\n  //返回值：arg1除以arg2的精确结果\n  Div: function (arg1, arg2) {\n    arg1 = parseFloat(arg1);\n    arg2 = parseFloat(arg2);\n    var t1 = 0, t2 = 0, r1, r2;\n    try { t1 = arg1.toString().split(".")[1].length; } catch (e) { }\n    try { t2 = arg2.toString().split(".")[1].length; } catch (e) { }\n    r1 = Number(arg1.toString().replace(".", ""));\n    r2 = Number(arg2.toString().replace(".", ""));\n    return (r1 / r2) * Math.pow(10, t2 - t1);\n  },\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h5",{attrs:{id:"加法函数，用来得到精确的除法结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加法函数，用来得到精确的除法结果"}},[s._v("#")]),s._v(" 加法函数，用来得到精确的除法结果")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。\n//调用：$h.Add(arg1,arg2)\n//返回值：arg1加上arg2的精确结果\nAdd: function (arg1, arg2) {\n  arg2 = parseFloat(arg2);\n  var r1, r2, m;\n  try { r1 = arg1.toString().split(".")[1].length } catch (e) { r1 = 0 }\n  try { r2 = arg2.toString().split(".")[1].length } catch (e) { r2 = 0 }\n  m = Math.pow(100, Math.max(r1, r2));\n  return (this.Mul(arg1, m) + this.Mul(arg2, m)) / m;\n},\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h5",{attrs:{id:"减法函数，用来得到精确的减法结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#减法函数，用来得到精确的减法结果"}},[s._v("#")]),s._v(" 减法函数，用来得到精确的减法结果")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('  //说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的减法结果。\n  //调用：$h.Sub(arg1,arg2)\n  //返回值：arg1减去arg2的精确结果\n\n  // 获取两个小数 最大的放大位数(n) 使的两个小数都能变为整数后 再去相减 后处于n 保留小数后就可以得到结果\n  Sub: function (arg1, arg2) {\n    arg1 = parseFloat(arg1);\n    arg2 = parseFloat(arg2);\n    var r1, r2, m, n;\n    try { r1 = arg1.toString().split(".")[1].length } catch (e) { r1 = 0 }\n    try { r2 = arg2.toString().split(".")[1].length } catch (e) { r2 = 0 }\n    m = Math.pow(10, Math.max(r1, r2));\n    //动态控制精度长度\n    n = (r1 >= r2) ? r1 : r2;\n    return ((this.Mul(arg1, m) - this.Mul(arg2, m)) / m).toFixed(n);\n  },\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h5",{attrs:{id:"乘法函数，用来得到精确的乘法结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#乘法函数，用来得到精确的乘法结果"}},[s._v("#")]),s._v(" 乘法函数，用来得到精确的乘法结果")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('  //说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。\n  //调用：$h.Mul(arg1,arg2)\n  //返回值：arg1乘以arg2的精确结果\n\n  // 由于js浮点数 计算有误差 所以 将小数 转为 整数后 然后将除以放大的倍数 这样就可以避免 js精度问题\n  Mul: function (arg1, arg2) {\n    arg1 = parseFloat(arg1);\n    arg2 = parseFloat(arg2);\n    var m = 0, s1 = arg1.toString(), s2 = arg2.toString();\n    try { m += s1.split(".")[1].length } catch (e) { }\n    try { m += s2.split(".")[1].length } catch (e) { }\n    return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m);\n  },\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h4",{attrs:{id:"js-原生-tofixed-的问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js-原生-tofixed-的问题"}},[s._v("#")]),s._v(" js 原生 tofixed() 的问题")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  console.log(' parseFloat(4.25).toFixed(2)', parseFloat(4.25).toFixed(2));//  4.25\n  console.log(' parseFloat(4.2501).toFixed(2)', parseFloat(4.2501).toFixed(2));//  4.25\n  console.log(' parseFloat(4.250).toFixed(2)', parseFloat(4.250).toFixed(2));//  4.25\n  console.log(' parseFloat(4.251).toFixed(2)', parseFloat(4.251).toFixed(2));//  4.25\n  console.log(' parseFloat(4.252).toFixed(2)', parseFloat(4.252).toFixed(2));//  4.25\n  console.log(' parseFloat(4.253).toFixed(2)', parseFloat(4.253).toFixed(2));//  4.25\n  console.log(' parseFloat(4.254).toFixed(2)', parseFloat(4.254).toFixed(2));//  4.25\n  console.log(' parseFloat(4.255).toFixed(2)', parseFloat(4.255).toFixed(2));//  4.25\n  console.log(' parseFloat(4.256).toFixed(2)', parseFloat(4.256).toFixed(2));//  4.26\n  console.log(' parseFloat(4.257).toFixed(2)', parseFloat(4.257).toFixed(2));//  4.26\n  console.log(' parseFloat(4.258).toFixed(2)', parseFloat(4.258).toFixed(2));//  4.26\n  console.log(' parseFloat(4.259).toFixed(2)', parseFloat(4.259).toFixed(2));//  4.26\n  console.log('---------------------------------');\n  console.log(' parseFloat(4.2550).toFixed(2)', parseFloat(4.2550).toFixed(2));//  4.25\n  console.log(' parseFloat(4.2551).toFixed(2)', parseFloat(4.2551).toFixed(2));//  4.26\n  console.log(' parseFloat(4.2552).toFixed(2)', parseFloat(4.2552).toFixed(2));//  4.26\n  console.log(' parseFloat(4.2553).toFixed(2)', parseFloat(4.2553).toFixed(2));//  4.26\n  console.log(' parseFloat(4.2554).toFixed(2)', parseFloat(4.2554).toFixed(2));//  4.26\n  console.log(' parseFloat(4.2555).toFixed(2)', parseFloat(4.2555).toFixed(2));//  4.26\n  console.log(' parseFloat(4.2557).toFixed(2)', parseFloat(4.2557).toFixed(2));//  4.26\n  console.log(' parseFloat(4.2558).toFixed(2)', parseFloat(4.2558).toFixed(2));//  4.26\n  console.log(' parseFloat(4.2559).toFixed(2)', parseFloat(4.2559).toFixed(2));//  4.26\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("通过上面的 一系列的打印我们可以 得出结论")]),s._v(" "),n("p",[s._v("以 4.25(num) 保留两位小数 为例")]),s._v(" "),n("p",[s._v("num > 4.2550 则进1")]),s._v(" "),n("p",[s._v("保留位 如果是5"),n("br"),s._v("\n则看的是 保留位的后一位 是否大于0\n大于0 则进1")]),s._v(" "),n("p",[s._v("重写toFixed 方法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    Number.prototype.toFixed = function (d) {\n      var s = this + "";\n      if (!d) d = 0;\n      if (s.indexOf(".") == -1) s += ".";\n      s += new Array(d + 1).join("0");\n      if (new RegExp("^(-|\\\\+)?(\\\\d+(\\\\.\\\\d{0," + (d + 1) + "})?)\\\\d*$").test(s)) {\n        var s = "0" + RegExp.$2, pm = RegExp.$1, a = RegExp.$3.length, b = true;\n        if (a == d + 2) {\n          a = s.match(/\\d/g);\n          if (parseInt(a[a.length - 1]) > 4) {\n            for (var i = a.length - 2; i >= 0; i--) {\n              a[i] = parseInt(a[i]) + 1;\n              if (a[i] == 10) {\n                a[i] = 0;\n                b = i != 1;\n              } else break;\n            }\n          }\n          s = a.join("").replace(new RegExp("(\\\\d+)(\\\\d{" + d + "})\\\\d$"), "$1.$2");\n\n        } if (b) s = s.substr(1);\n        return (pm + s).replace(/\\.$/, "");\n      } return this + "";\n\n    };\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);